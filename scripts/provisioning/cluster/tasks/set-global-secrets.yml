---
- name: Check if kubeconfig secret exist
  uri:
    url: "{{ rancher_api_url }}/projects/{{ cluster_id }}:{{ project_default_id }}/secrets/{{ project_default_id }}:{{ kubeconfig_secret }}"
    method: GET
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
      Authorization: "Bearer {{ rancher_token }}"
    force_basic_auth: yes
    validate_certs: no
    status_code: 200, 404
  register: kubeconfig_exist

- name: Create kubeconfig secret in all namespaces
  uri:
    url: "{{ rancher_api_url }}/projects/{{ cluster_id }}:{{ project_default_id }}/secrets"
    method: POST
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
      Authorization: "Bearer {{ rancher_token }}"
    body:
      name: "{{ kubeconfig_secret }}"
      data:
        config: "{{ lookup('file', kubeconfig_path) | b64encode }}"
    body_format: json
    force_basic_auth: yes
    return_content: yes
    validate_certs: no
    status_code: 201
  when: kubeconfig_exist.status != 200
  register: kubeconfig_created


- name: Check if github secret exist
  uri:
    url: "{{ rancher_api_url }}/projects/{{ cluster_id }}:{{ project_default_id }}/secrets/{{ project_default_id }}:{{ github_secret }}"
    method: GET
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
      Authorization: "Bearer {{ rancher_token }}"
    force_basic_auth: yes
    validate_certs: no
    status_code: 200, 404
  register: github_exist

- name: Create github secret in all namespaces
  uri:
    url: "{{ rancher_api_url }}/projects/{{ cluster_id }}:{{ project_default_id }}/secrets"
    method: POST
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
      Authorization: "Bearer {{ rancher_token }}"
    body:
      name: "{{ github_secret }}"
      data:
        id_rsa: "{{ github_ssh | b64encode }}"
        known_hosts: "{{ github_known_hosts | b64encode }}"
    body_format: json
    force_basic_auth: yes
    return_content: yes
    validate_certs: no
    status_code: 201
  when: github_exist.status != 200
  register: github_created


- name: Check if registry secret exist
  uri:
    url: "{{ rancher_api_url }}/projects/{{ cluster_id }}:{{ project_default_id }}/dockerCredentials/{{ project_default_id }}:{{ docker_registry_secret }}"
    method: GET
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
      Authorization: "Bearer {{ rancher_token }}"
    force_basic_auth: yes
    validate_certs: no
    status_code: 200, 404
  register: docker_registry_exist

- name: Create registry secret in all namespaces
  uri:
    url: "{{ rancher_api_url }}/projects/{{ cluster_id }}:{{ project_default_id }}/dockerCredentials"
    method: POST
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
      Authorization: "Bearer {{ rancher_token }}"
    body:
      name: "{{ docker_registry_secret }}"
      registries:
        eu.gcr.io: # Docker registry URL
          username: "{{ docker_registry_username }}"
          password: "{{ docker_registry_password | to_json }}"
          auth: "{{ docker_registry_password | to_json | b64encode }}"
    body_format: json
    force_basic_auth: yes
    return_content: yes
    validate_certs: no
    status_code: 201
  when: docker_registry_exist.status != 200
  register: docker_registry_created
