---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: client
  name: client
  namespace: {{ CICD_TEST_NAMESPACE }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      imagePullSecrets:
      - name: parkhands-registry-secret
      initContainers:
      - name: wait-graphql
        image: radial/busyboxplus:curl
        command: ['sh', '-c']
        args:
          - |
            until curl -sSf -X POST -H "Content-Type: application/json" --data '{"query": "{ languagesList { name } }"}' ${GRAPHQL_API_URL} > /dev/null; do echo waiting for GraphQL API; sleep 2; done;
        env:
        - name: GRAPHQL_API_URL
          value: http://graphql:5000/graphql
      containers:
      - name: ph-client
        image: {{ REGISTRY_BASE_URL }}/ph_client:{{ DEPLOY_CLIENT_IMAGE_TAG }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3777
        env:
        - name: GRAPHQL_API_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: GRAPHQL_API_ENDPOINT
        - name: GRAPHQL_API_URL
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: GRAPHQL_API_URL
        - name: GRAPHQL_WS_URL
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: GRAPHQL_WS_URL
        - name: ADMIN_URL
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: ADMIN_URL
        - name: CLIENT_URL
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: CLIENT_URL
        - name: CLIENT_PORT
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: CLIENT_PORT
        - name: CDN_URL
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: CDN_URL
        - name: FILE_API_URL
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: FILE_API_URL
        - name: FILE_API_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: FILE_API_ENDPOINT
        - name: BUILD_ID
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: BUILD_ID
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: NODE_ENV
        - name: NPM_RUN_TARGET
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: NPM_RUN_TARGET
        - name: GOOGLE_MAPS_API_KEY
          valueFrom:
            secretKeyRef:
              name: env-secrets
              key: GOOGLE_MAPS_API_KEY
        - name: STRIPE_PUBLIC_KEY
          valueFrom:
            secretKeyRef:
              name: env-secrets
              key: STRIPE_PUBLIC_KEY
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: env-secrets
              key: STRIPE_SECRET_KEY
        - name: STRIPE_PRICE_ID
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: STRIPE_PRICE_ID
        - name: WIDGET_URL
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: WIDGET_URL
        livenessProbe:
          tcpSocket:
            port: 3777
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          tcpSocket:
            port: 3777
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        resources: {}
        workingDir: /web/client
      restartPolicy: Always
status: {}
